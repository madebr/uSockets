name: Build uSockets using CMake
on:
  pull_request:
  push:
  release:
    types: published
jobs:
  build-cmake:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]  # FIXME: add windows-latest
        crypto: [OPENSSL, WOLFSSL, NONE]
        event: [LIBUV, KQUEUE, EPOLL, GCD]
        exclude:
          - os: windows-latest
            event: [KQUEUE, EPOLL, GCD]
          - os: ubuntu-latest
            event: GCD
          - os: ubuntu-latest
            event: KQUEUE
          - os: macos-latest
            event: EPOLL
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: "Install openssl (apt-get)"
        if: startsWith(matrix.os, 'ubuntu') && matrix.crypto == 'OPENSSL'
        run: sudo apt-get install -y libssl-dev
      - name: "Install openssl (brew)"
        if: startsWith(matrix.os, 'macos') && matrix.crypto == 'OPENSSL'
        run: brew install openssl
      - name: "Install wolfssl (apt-get)"
        if: startsWith(matrix.os, 'ubuntu') && matrix.crypto == 'WOLFSSL'
        run: sudo apt-get install -y libwolfssl-dev
      - name: "Install wolfssl (brew)"
        if: startsWith(matrix.os, 'macos') && matrix.crypto == 'WOLFSSL'
        run: brew install wolfssl
      - name: "Install libuv (apt-get)"
        if: startsWith(matrix.os, 'ubuntu') && matrix.event == 'LIBUV'
        run: sudo apt-get install -y libuv-dev
      - name: 'Install libuv (brew)'
        if: startsWith(matrix.os, 'macos') && matrix.event == 'LIBUV'
        run: brew install libuv
      - name: 'Set up directories'
        run: mkdir build && cd build
      - name: 'Configure build'
        run: cmake $GITHUB_WORKSPACE -DUSOCKETS_CRYPTO=${{ matrix.crypto }} -DUSOCKETS_EVENT=${{ matrix.event }}
      - name: 'Build uSockets'
        run: cmake --build .
